#include <iostream>
#include <algorithm>
#include <vector>
#include <fstream>

#include "geometry.h"

#define STB_IMAGE_WRITE_IMPLEMENTATION
#include "stb_image_write.h"

#define CHANNEL_NUM 3
#define JPG_QUALITY	100

void render()
{
	const int width = 1024;
	const int height = 768;
	std::vector<Vec3f> framebuffer{ width * height };

	for (size_t i = 0; i < height; i++)
		for (size_t k = 0; k < width; k++) {
			framebuffer[i * width + k] = Vec3f(i / float(height), k / float(width), 0);
		}

	std::vector<unsigned char> pixeldata(width * height * CHANNEL_NUM);
	std::cout << pixeldata.size();
	for (size_t i = 0; i < height * width; ++i) {
		pixeldata[i * CHANNEL_NUM + 0] = (unsigned char)(255 * framebuffer[i][0]);
		pixeldata[i * CHANNEL_NUM + 1] = (unsigned char)(255 * framebuffer[i][1]);
		pixeldata[i * CHANNEL_NUM + 2] = (unsigned char)(255 * framebuffer[i][2]);
	}

	stbi_write_jpg("./out1.jpg", width, height, CHANNEL_NUM, pixeldata.data(), JPG_QUALITY);
}


int main()
{
	render();
	return 0;
}
